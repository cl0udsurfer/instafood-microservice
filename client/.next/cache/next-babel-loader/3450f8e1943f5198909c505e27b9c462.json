{"ast":null,"code":"var _jsxFileName = \"/home/viktorser/Desktop/DEV/Projects/Portfolio/instafood/client/components/AuthForm/Signin.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState } from 'react';\nimport Router from 'next/router';\nimport { FormattedMessage } from 'react-intl';\nimport { AuthContext } from 'context/auth/auth.context';\nimport useRequest from 'hooks/useRequest';\nimport { Google, Button } from 'components';\nimport { LinkButton, Wrapper, Container, Heading, SubHeading, OfferSection, Offer, Input, Divider } from './AuthForm.style';\n\nconst SigninForm = () => {\n  const {\n    authDispatch\n  } = useContext(AuthContext);\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = values;\n  const {\n    doRequest,\n    errors\n  } = useRequest({\n    url: '/api/users/signin',\n    method: 'post',\n    body: {\n      email,\n      password\n    },\n    onSuccess: () => Router.push('/')\n  });\n\n  const toggleSignUpForm = () => {\n    authDispatch({\n      type: 'SIGNUP'\n    });\n  };\n\n  const handleChange = name => e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [name]: e.target.value\n    }));\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await doRequest();\n  };\n\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"welcomeBack\",\n    defaultMessage: \"Welcome Back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), __jsx(SubHeading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"loginText\",\n    defaultMessage: \"Login with your email & password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"emailAddressPlaceholder\",\n    defaultMessage: \"Email Address.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, placeholder => __jsx(Input, {\n    type: \"email\",\n    onChange: handleChange('email'),\n    placeholder: placeholder,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), __jsx(FormattedMessage, {\n    id: \"passwordPlaceholder\",\n    defaultMessage: \"Password (min 6 characters)\",\n    values: {\n      minCharacter: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, placeholder => __jsx(Input, {\n    type: \"password\",\n    placeholder: placeholder,\n    onChange: handleChange('password'),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  })), errors, __jsx(Button, {\n    title: 'Continue',\n    intlButtonId: \"continueBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"orText\",\n    defaultMessage: \"or\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }))), __jsx(Button, {\n    title: 'Continue with Google',\n    icon: __jsx(Google, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }),\n    iconPosition: \"left\",\n    iconStyle: {\n      color: '#ffffff',\n      marginRight: 5\n    },\n    intlButtonId: \"continueGoogleBtn\",\n    style: {\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), __jsx(Offer, {\n    style: {\n      padding: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"dontHaveAccount\",\n    defaultMessage: \"Don't have any account?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), ' ', __jsx(LinkButton, {\n    onClick: toggleSignUpForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"signUpBtnText\",\n    defaultMessage: \"Sign Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  })))), __jsx(OfferSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(Offer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"forgotPasswordText\",\n    defaultMessage: \"Forgot your password?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), ' ', __jsx(LinkButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"resetText\",\n    defaultMessage: \"Reset It\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default SigninForm;","map":{"version":3,"sources":["/home/viktorser/Desktop/DEV/Projects/Portfolio/instafood/client/components/AuthForm/Signin.tsx"],"names":["React","useContext","useState","Router","FormattedMessage","AuthContext","useRequest","Google","Button","LinkButton","Wrapper","Container","Heading","SubHeading","OfferSection","Offer","Input","Divider","SigninForm","authDispatch","values","setValues","email","password","doRequest","errors","url","method","body","onSuccess","push","toggleSignUpForm","type","handleChange","name","e","target","value","onSubmit","preventDefault","placeholder","minCharacter","color","marginRight","padding"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport Router from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\nimport { AuthContext } from 'context/auth/auth.context';\nimport useRequest from 'hooks/useRequest';\nimport { Google, Button } from 'components';\nimport {\n  LinkButton,\n  Wrapper,\n  Container,\n  Heading,\n  SubHeading,\n  OfferSection,\n  Offer,\n  Input,\n  Divider,\n} from './AuthForm.style';\n\nconst SigninForm = () => {\n  const { authDispatch } = useContext<any>(AuthContext);\n  const [values, setValues] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = values;\n\n  const { doRequest, errors } = useRequest({\n    url: '/api/users/signin',\n    method: 'post',\n    body: {\n      email,\n      password,\n    },\n    onSuccess: () => Router.push('/'),\n  });\n\n  const toggleSignUpForm = () => {\n    authDispatch({\n      type: 'SIGNUP',\n    });\n  };\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    await doRequest();\n  };\n\n  return (\n    <Wrapper>\n      <Container>\n        <Heading>\n          <FormattedMessage id='welcomeBack' defaultMessage='Welcome Back' />\n        </Heading>\n        <SubHeading>\n          <FormattedMessage\n            id='loginText'\n            defaultMessage='Login with your email &amp; password'\n          />\n        </SubHeading>\n        <form onSubmit={onSubmit}>\n          <FormattedMessage\n            id='emailAddressPlaceholder'\n            defaultMessage='Email Address.'\n          >\n            {(placeholder) => (\n              <Input\n                type='email'\n                onChange={handleChange('email')}\n                placeholder={placeholder}\n                required\n              />\n            )}\n          </FormattedMessage>\n\n          <FormattedMessage\n            id='passwordPlaceholder'\n            defaultMessage='Password (min 6 characters)'\n            values={{ minCharacter: 6 }}\n          >\n            {(placeholder) => (\n              <Input\n                type='password'\n                placeholder={placeholder}\n                onChange={handleChange('password')}\n                required\n              />\n            )}\n          </FormattedMessage>\n\n          {errors}\n          <Button title={'Continue'} intlButtonId='continueBtn' />\n        </form>\n        <Divider>\n          <span>\n            <FormattedMessage id='orText' defaultMessage='or' />\n          </span>\n        </Divider>\n\n        <Button\n          title={'Continue with Google'}\n          icon={<Google />}\n          iconPosition='left'\n          iconStyle={{ color: '#ffffff', marginRight: 5 }}\n          intlButtonId='continueGoogleBtn'\n          style={{ color: '#fff' }}\n        />\n\n        <Offer style={{ padding: '20px 0' }}>\n          <FormattedMessage\n            id='dontHaveAccount'\n            defaultMessage=\"Don't have any account?\"\n          />{' '}\n          <LinkButton onClick={toggleSignUpForm}>\n            <FormattedMessage id='signUpBtnText' defaultMessage='Sign Up' />\n          </LinkButton>\n        </Offer>\n      </Container>\n\n      <OfferSection>\n        <Offer>\n          <FormattedMessage\n            id='forgotPasswordText'\n            defaultMessage='Forgot your password?'\n          />{' '}\n          <LinkButton>\n            <FormattedMessage id='resetText' defaultMessage='Reset It' />\n          </LinkButton>\n        </Offer>\n      </OfferSection>\n    </Wrapper>\n  );\n};\n\nexport default SigninForm;\n"]},"metadata":{},"sourceType":"module"}