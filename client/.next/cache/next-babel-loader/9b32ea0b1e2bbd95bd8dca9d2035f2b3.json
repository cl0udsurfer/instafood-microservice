{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/viktorser/Desktop/DEV/Projects/Portfolio/instafood/client/containers/Layout/Header/MobileDrawer.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { Drawer, Button, Navlink, CloseIcon } from 'components';\nimport { DrawerContext } from 'context/drawer/drawer.context';\nimport { HamburgerIcon, DrawerContentWrapper, DrawerClose, DrawerProfile, LogoutView, DrawerMenu, DrawerMenuItem } from './Header.style';\nvar DrawerMenuItems = [{\n  id: 1,\n  intlLabelId: 'navLinkHome',\n  label: 'Home',\n  href: '/'\n}, {\n  id: 2,\n  intlLabelId: 'navlinkCheckout',\n  label: 'Checkout',\n  href: '/'\n}, {\n  id: 3,\n  label: 'Checkout Second',\n  intlLabelId: 'alternativeCheckout',\n  href: '/'\n}, {\n  id: 4,\n  intlLabelId: 'navlinkProfile',\n  label: 'Profile',\n  href: '/'\n}, {\n  id: 5,\n  intlLabelId: 'sidebarYourOrder',\n  label: 'Order',\n  href: '/'\n}, {\n  id: 6,\n  intlLabelId: 'navlinkOrderReceived',\n  label: 'Received',\n  href: '/'\n}, {\n  id: 7,\n  intlLabelId: 'navlinkHelp',\n  label: 'Help',\n  href: '/'\n}, {\n  id: 8,\n  intlLabelId: 'navlinkOffer',\n  label: 'Offer',\n  href: '/'\n}];\n\nvar MobileDrawer = function MobileDrawer() {\n  _s();\n\n  var _useContext = useContext(DrawerContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch; // Toggle drawer\n\n\n  var toggleHandler = React.useCallback(function () {\n    dispatch({\n      type: 'TOGGLE'\n    });\n  }, [dispatch]);\n  return __jsx(Drawer, {\n    width: \"316px\",\n    drawerHandler: __jsx(HamburgerIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    })),\n    open: state.isOpen,\n    toggleHandler: toggleHandler,\n    closeButton: __jsx(DrawerClose, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, __jsx(CloseIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(DrawerContentWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(DrawerProfile, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(LogoutView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    intlButtonId: \"mobileSignInButtonText\",\n    title: \"Join In\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }))), __jsx(DrawerMenu, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, DrawerMenuItems.map(function (item) {\n    return __jsx(DrawerMenuItem, {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, __jsx(Navlink, {\n      onClick: toggleHandler,\n      href: item.href,\n      label: item.label,\n      intlId: item.intlLabelId,\n      className: \"drawer_menu_item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }));\n  }))), ' ');\n};\n\n_s(MobileDrawer, \"OqcrJSEs/Z0UdNNMJwJDY0ChobM=\");\n\n_c = MobileDrawer;\nexport default MobileDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileDrawer\");","map":{"version":3,"sources":["/home/viktorser/Desktop/DEV/Projects/Portfolio/instafood/client/containers/Layout/Header/MobileDrawer.tsx"],"names":["React","useContext","Drawer","Button","Navlink","CloseIcon","DrawerContext","HamburgerIcon","DrawerContentWrapper","DrawerClose","DrawerProfile","LogoutView","DrawerMenu","DrawerMenuItem","DrawerMenuItems","id","intlLabelId","label","href","MobileDrawer","state","dispatch","toggleHandler","useCallback","type","isOpen","map","item"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { openModal } from '@redq/reuse-modal';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nimport { AuthForm, Drawer, Button, Navlink, CloseIcon } from 'components';\nimport { DrawerContext } from 'context/drawer/drawer.context';\nimport {\n  HamburgerIcon,\n  DrawerContentWrapper,\n  DrawerClose,\n  DrawerProfile,\n  LogoutView,\n  DrawerMenu,\n  DrawerMenuItem,\n} from './Header.style';\n\nconst DrawerMenuItems = [\n  {\n    id: 1,\n    intlLabelId: 'navLinkHome',\n    label: 'Home',\n    href: '/',\n  },\n  {\n    id: 2,\n    intlLabelId: 'navlinkCheckout',\n    label: 'Checkout',\n    href: '/',\n  },\n  {\n    id: 3,\n    label: 'Checkout Second',\n    intlLabelId: 'alternativeCheckout',\n    href: '/',\n  },\n  {\n    id: 4,\n    intlLabelId: 'navlinkProfile',\n    label: 'Profile',\n    href: '/',\n  },\n  {\n    id: 5,\n    intlLabelId: 'sidebarYourOrder',\n    label: 'Order',\n    href: '/',\n  },\n  {\n    id: 6,\n    intlLabelId: 'navlinkOrderReceived',\n    label: 'Received',\n    href: '/',\n  },\n  {\n    id: 7,\n    intlLabelId: 'navlinkHelp',\n    label: 'Help',\n    href: '/',\n  },\n  {\n    id: 8,\n    intlLabelId: 'navlinkOffer',\n    label: 'Offer',\n    href: '/',\n  },\n];\n\nconst MobileDrawer: React.FC = () => {\n  const { state, dispatch } = useContext<any>(DrawerContext);\n\n  // Toggle drawer\n  const toggleHandler = React.useCallback(() => {\n    dispatch({\n      type: 'TOGGLE',\n    });\n  }, [dispatch]);\n\n  return (\n    <Drawer\n      width='316px'\n      drawerHandler={\n        <HamburgerIcon>\n          <span />\n          <span />\n          <span />\n        </HamburgerIcon>\n      }\n      open={state.isOpen}\n      toggleHandler={toggleHandler}\n      closeButton={\n        <DrawerClose>\n          <CloseIcon />\n        </DrawerClose>\n      }\n    >\n      <DrawerContentWrapper>\n        <DrawerProfile>\n          <LogoutView>\n            <Button intlButtonId='mobileSignInButtonText' title='Join In' />\n          </LogoutView>\n        </DrawerProfile>\n\n        <DrawerMenu>\n          {DrawerMenuItems.map((item) => (\n            <DrawerMenuItem key={item.id}>\n              <Navlink\n                onClick={toggleHandler}\n                href={item.href}\n                label={item.label}\n                intlId={item.intlLabelId}\n                className='drawer_menu_item'\n              />\n            </DrawerMenuItem>\n          ))}\n        </DrawerMenu>\n      </DrawerContentWrapper>{' '}\n    </Drawer>\n  );\n};\n\nexport default MobileDrawer;\n"]},"metadata":{},"sourceType":"module"}