{"ast":null,"code":"var _jsxFileName = \"/home/viktorser/Desktop/DEV/Projects/Portfolio/instafood/client/components/SearchBox/Input.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { SearchBox, SearchButton, SearchInputWrapper } from './SearchBox.style';\n\nconst InputSearch = ({\n  type,\n  value,\n  buttonText,\n  buttonIcon,\n  onChange,\n  style,\n  onKeyPress,\n  onBlur,\n  onClick,\n  onFocus,\n  bordered,\n  showSvg,\n  inputClass\n}) => {\n  const intl = useIntl();\n  return __jsx(React.Fragment, null, __jsx(SearchInputWrapper, {\n    style: style,\n    bordered: bordered,\n    showSvg: showSvg,\n    className: `${inputClass} ${bordered === true ? 'bordered' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, showSvg && __jsx(\"span\", {\n    className: \"searchIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }\n  }, buttonIcon), __jsx(SearchBox, {\n    type: type,\n    value: value,\n    placeholder: intl.formatMessage({\n      id: 'searchPlaceholder',\n      defaultMessage: 'Search your products from here'\n    }),\n    onChange: onChange,\n    onFocus: onFocus,\n    onKeyPress: onKeyPress,\n    onBlur: onBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), showSvg !== true ? __jsx(SearchButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, buttonIcon, buttonText !== '' || null ? __jsx(\"span\", {\n    className: \"buttonText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"searchButtonText\",\n    defaultMessage: buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  })) : '') : '')));\n};\n\nexport default InputSearch;","map":{"version":3,"sources":["/home/viktorser/Desktop/DEV/Projects/Portfolio/instafood/client/components/SearchBox/Input.tsx"],"names":["React","FormattedMessage","useIntl","SearchBox","SearchButton","SearchInputWrapper","InputSearch","type","value","buttonText","buttonIcon","onChange","style","onKeyPress","onBlur","onClick","onFocus","bordered","showSvg","inputClass","intl","formatMessage","id","defaultMessage"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,YAA1C;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,kBAAlC,QAA4D,mBAA5D;;AAmBA,MAAMC,WAAiC,GAAG,CAAC;AACzCC,EAAAA,IADyC;AAEzCC,EAAAA,KAFyC;AAGzCC,EAAAA,UAHyC;AAIzCC,EAAAA,UAJyC;AAKzCC,EAAAA,QALyC;AAMzCC,EAAAA,KANyC;AAOzCC,EAAAA,UAPyC;AAQzCC,EAAAA,MARyC;AASzCC,EAAAA,OATyC;AAUzCC,EAAAA,OAVyC;AAWzCC,EAAAA,QAXyC;AAYzCC,EAAAA,OAZyC;AAazCC,EAAAA;AAbyC,CAAD,KAcpC;AACJ,QAAMC,IAAI,GAAGlB,OAAO,EAApB;AACA,SACE,4BACE,MAAC,kBAAD;AACE,IAAA,KAAK,EAAEU,KADT;AAEE,IAAA,QAAQ,EAAEK,QAFZ;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,SAAS,EAAG,GAAEC,UAAW,IAAGF,QAAQ,KAAK,IAAb,GAAoB,UAApB,GAAiC,EAAG,EAJlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,IAAI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BR,UAA9B,CADd,EAEE,MAAC,SAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,WAAW,EAAEY,IAAI,CAACC,aAAL,CAAmB;AAC9BC,MAAAA,EAAE,EAAE,mBAD0B;AAE9BC,MAAAA,cAAc,EAAE;AAFc,KAAnB,CAHf;AAOE,IAAA,QAAQ,EAAEZ,QAPZ;AAQE,IAAA,OAAO,EAAEK,OARX;AASE,IAAA,UAAU,EAAEH,UATd;AAUE,IAAA,MAAM,EAAEC,MAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAcGI,OAAO,KAAK,IAAZ,GACC,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,UADH,EAEGD,UAAU,KAAK,EAAf,IAAqB,IAArB,GACC;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,kBADL;AAEE,IAAA,cAAc,EAAEA,UAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAQC,EAVJ,CADD,GAeC,EA7BJ,CANF,CADF,CADF;AA2CD,CA3DD;;AA6DA,eAAeH,WAAf","sourcesContent":["import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { SearchBox, SearchButton, SearchInputWrapper } from './SearchBox.style';\n\ntype InputProps = {\n  type?: string;\n  value?: number | string;\n  buttonText?: string;\n  inputClass?: string;\n  buttonIcon?: React.ReactNode;\n  placeholder?: React.ReactNode;\n  bordered?: boolean;\n  showSvg?: boolean;\n  style?: React.CSSProperties;\n  onChange?: (e: any) => void;\n  onKeyPress?: (e: any) => void;\n  onBlur?: (e: any) => void;\n  onFocus?: (e: any) => void;\n  onClick?: (e: any) => void;\n};\n\nconst InputSearch: React.FC<InputProps> = ({\n  type,\n  value,\n  buttonText,\n  buttonIcon,\n  onChange,\n  style,\n  onKeyPress,\n  onBlur,\n  onClick,\n  onFocus,\n  bordered,\n  showSvg,\n  inputClass,\n}) => {\n  const intl = useIntl();\n  return (\n    <>\n      <SearchInputWrapper\n        style={style}\n        bordered={bordered}\n        showSvg={showSvg}\n        className={`${inputClass} ${bordered === true ? 'bordered' : ''}`}\n      >\n        <form>\n          {showSvg && <span className='searchIcon'>{buttonIcon}</span>}\n          <SearchBox\n            type={type}\n            value={value}\n            placeholder={intl.formatMessage({\n              id: 'searchPlaceholder',\n              defaultMessage: 'Search your products from here',\n            })}\n            onChange={onChange}\n            onFocus={onFocus}\n            onKeyPress={onKeyPress}\n            onBlur={onBlur}\n          />\n          {showSvg !== true ? (\n            <SearchButton>\n              {buttonIcon}\n              {buttonText !== '' || null ? (\n                <span className='buttonText'>\n                  <FormattedMessage\n                    id='searchButtonText'\n                    defaultMessage={buttonText}\n                  />\n                </span>\n              ) : (\n                ''\n              )}\n            </SearchButton>\n          ) : (\n            ''\n          )}\n        </form>\n      </SearchInputWrapper>\n    </>\n  );\n};\n\nexport default InputSearch;\n"]},"metadata":{},"sourceType":"module"}