{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/viktorser/Desktop/DEV/Projects/Portfolio/instafood/client/components/AuthForm/Signin.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from 'react';\nimport Router from 'next/router';\nimport { FormattedMessage } from 'react-intl';\nimport { AuthContext } from 'context/auth/auth.context';\nimport useRequest from 'hooks/useRequest';\nimport { Google, Button } from 'components';\nimport { LinkButton, Wrapper, Container, Heading, SubHeading, OfferSection, Offer, Input, Divider } from './AuthForm.style';\n\nvar SigninForm = function SigninForm() {\n  _s();\n\n  var _useContext = useContext(AuthContext),\n      authDispatch = _useContext.authDispatch;\n\n  var _useState = useState({\n    email: '',\n    password: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var email = values.email,\n      password = values.password;\n\n  var _useRequest = useRequest({\n    url: '/api/users/signin',\n    method: 'post',\n    body: {\n      email: email,\n      password: password\n    },\n    onSuccess: function onSuccess() {\n      return Router.push('/');\n    }\n  }),\n      doRequest = _useRequest.doRequest,\n      errors = _useRequest.errors;\n\n  var toggleSignUpForm = function toggleSignUpForm() {\n    authDispatch({\n      type: 'SIGNUP'\n    });\n  };\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, e.target.value)));\n    };\n  };\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return doRequest();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"welcomeBack\",\n    defaultMessage: \"Welcome Back\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), __jsx(SubHeading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"loginText\",\n    defaultMessage: \"Login with your email & password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), __jsx(\"form\", {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"emailAddressPlaceholder\",\n    defaultMessage: \"Email Address.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, function (placeholder) {\n    return __jsx(Input, {\n      type: \"email\",\n      onChange: handleChange('email'),\n      placeholder: placeholder,\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    });\n  }), __jsx(FormattedMessage, {\n    id: \"passwordPlaceholder\",\n    defaultMessage: \"Password (min 6 characters)\",\n    values: {\n      minCharacter: 6\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, function (placeholder) {\n    return __jsx(Input, {\n      type: \"password\",\n      placeholder: placeholder,\n      onChange: handleChange('password'),\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    });\n  }), errors, __jsx(Button, {\n    title: 'Continue',\n    intlButtonId: \"continueBtn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"orText\",\n    defaultMessage: \"or\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }))), __jsx(Button, {\n    title: 'Continue with Google',\n    icon: __jsx(Google, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }),\n    iconPosition: \"left\",\n    iconStyle: {\n      color: '#ffffff',\n      marginRight: 5\n    },\n    intlButtonId: \"continueGoogleBtn\",\n    style: {\n      color: '#fff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), __jsx(Offer, {\n    style: {\n      padding: '20px 0'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"dontHaveAccount\",\n    defaultMessage: \"Don't have any account?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), ' ', __jsx(LinkButton, {\n    onClick: toggleSignUpForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"signUpBtnText\",\n    defaultMessage: \"Sign Up\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  })))), __jsx(OfferSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(Offer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"forgotPasswordText\",\n    defaultMessage: \"Forgot your password?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), ' ', __jsx(LinkButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"resetText\",\n    defaultMessage: \"Reset It\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(SigninForm, \"q73fx5/HZJ/aMfaUs3ANN6rbDSU=\", false, function () {\n  return [useRequest];\n});\n\n_c = SigninForm;\nexport default SigninForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninForm\");","map":{"version":3,"sources":["/home/viktorser/Desktop/DEV/Projects/Portfolio/instafood/client/components/AuthForm/Signin.tsx"],"names":["React","useContext","useState","Router","FormattedMessage","AuthContext","useRequest","Google","Button","LinkButton","Wrapper","Container","Heading","SubHeading","OfferSection","Offer","Input","Divider","SigninForm","authDispatch","email","password","values","setValues","url","method","body","onSuccess","push","doRequest","errors","toggleSignUpForm","type","handleChange","name","e","target","value","onSubmit","preventDefault","placeholder","minCharacter","color","marginRight","padding"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,YAA/B;AACA,SACEC,UADF,EAEEC,OAFF,EAGEC,SAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,YANF,EAOEC,KAPF,EAQEC,KARF,EASEC,OATF,QAUO,kBAVP;;AAYA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,oBACEjB,UAAU,CAAMI,WAAN,CADZ;AAAA,MACfc,YADe,eACfA,YADe;;AAAA,kBAEKjB,QAAQ,CAAC;AACnCkB,IAAAA,KAAK,EAAE,EAD4B;AAEnCC,IAAAA,QAAQ,EAAE;AAFyB,GAAD,CAFb;AAAA,MAEhBC,MAFgB;AAAA,MAERC,SAFQ;;AAAA,MAOfH,KAPe,GAOKE,MAPL,CAOfF,KAPe;AAAA,MAORC,QAPQ,GAOKC,MAPL,CAORD,QAPQ;;AAAA,oBASOf,UAAU,CAAC;AACvCkB,IAAAA,GAAG,EAAE,mBADkC;AAEvCC,IAAAA,MAAM,EAAE,MAF+B;AAGvCC,IAAAA,IAAI,EAAE;AACJN,MAAAA,KAAK,EAALA,KADI;AAEJC,MAAAA,QAAQ,EAARA;AAFI,KAHiC;AAOvCM,IAAAA,SAAS,EAAE;AAAA,aAAMxB,MAAM,CAACyB,IAAP,CAAY,GAAZ,CAAN;AAAA;AAP4B,GAAD,CATjB;AAAA,MASfC,SATe,eASfA,SATe;AAAA,MASJC,MATI,eASJA,MATI;;AAmBvB,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BZ,IAAAA,YAAY,CAAC;AACXa,MAAAA,IAAI,EAAE;AADK,KAAD,CAAZ;AAGD,GAJD;;AAMA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;AAAA,WAAU,UAACC,CAAD,EAAO;AACpCZ,MAAAA,SAAS,iCAAMD,MAAN,2BAAeY,IAAf,EAAsBC,CAAC,CAACC,MAAF,CAASC,KAA/B,GAAT;AACD,KAFoB;AAAA,GAArB;;AAIA,MAAMC,QAAQ;AAAA,wEAAG,iBAAOH,CAAP;AAAA;AAAA;AAAA;AAAA;AACfA,cAAAA,CAAC,CAACI,cAAF;AADe;AAAA,qBAGTV,SAAS,EAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARS,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAMA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,aAArB;AAAmC,IAAA,cAAc,EAAC,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,cAAc,EAAC,kCAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAUE;AAAM,IAAA,QAAQ,EAAEA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,yBADL;AAEE,IAAA,cAAc,EAAC,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,UAACE,WAAD;AAAA,WACC,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,QAAQ,EAAEP,YAAY,CAAC,OAAD,CAFxB;AAGE,MAAA,WAAW,EAAEO,WAHf;AAIE,MAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAAA,GAJH,CADF,EAeE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,qBADL;AAEE,IAAA,cAAc,EAAC,6BAFjB;AAGE,IAAA,MAAM,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,UAACD,WAAD;AAAA,WACC,MAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,WAAW,EAAEA,WAFf;AAGE,MAAA,QAAQ,EAAEP,YAAY,CAAC,UAAD,CAHxB;AAIE,MAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAAA,GALH,CAfF,EA8BGH,MA9BH,EA+BE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,UAAf;AAA2B,IAAA,YAAY,EAAC,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,CAVF,EA2CE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,QAArB;AAA8B,IAAA,cAAc,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CA3CF,EAiDE,MAAC,MAAD;AACE,IAAA,KAAK,EAAE,sBADT;AAEE,IAAA,IAAI,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAGE,IAAA,YAAY,EAAC,MAHf;AAIE,IAAA,SAAS,EAAE;AAAEY,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,WAAW,EAAE;AAAjC,KAJb;AAKE,IAAA,YAAY,EAAC,mBALf;AAME,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,EA0DE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEE,MAAAA,OAAO,EAAE;AAAX,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,cAAc,EAAC,yBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIK,GAJL,EAKE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAEb,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,eAArB;AAAqC,IAAA,cAAc,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CA1DF,CADF,EAsEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,EAAE,EAAC,oBADL;AAEE,IAAA,cAAc,EAAC,uBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIK,GAJL,EAKE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,WAArB;AAAiC,IAAA,cAAc,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,CAtEF,CADF;AAoFD,CAvHD;;GAAMb,U;UAS0BZ,U;;;KAT1BY,U;AAyHN,eAAeA,UAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport Router from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\nimport { AuthContext } from 'context/auth/auth.context';\nimport useRequest from 'hooks/useRequest';\nimport { Google, Button } from 'components';\nimport {\n  LinkButton,\n  Wrapper,\n  Container,\n  Heading,\n  SubHeading,\n  OfferSection,\n  Offer,\n  Input,\n  Divider,\n} from './AuthForm.style';\n\nconst SigninForm = () => {\n  const { authDispatch } = useContext<any>(AuthContext);\n  const [values, setValues] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = values;\n\n  const { doRequest, errors } = useRequest({\n    url: '/api/users/signin',\n    method: 'post',\n    body: {\n      email,\n      password,\n    },\n    onSuccess: () => Router.push('/'),\n  });\n\n  const toggleSignUpForm = () => {\n    authDispatch({\n      type: 'SIGNUP',\n    });\n  };\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    await doRequest();\n  };\n\n  return (\n    <Wrapper>\n      <Container>\n        <Heading>\n          <FormattedMessage id='welcomeBack' defaultMessage='Welcome Back' />\n        </Heading>\n        <SubHeading>\n          <FormattedMessage\n            id='loginText'\n            defaultMessage='Login with your email &amp; password'\n          />\n        </SubHeading>\n        <form onSubmit={onSubmit}>\n          <FormattedMessage\n            id='emailAddressPlaceholder'\n            defaultMessage='Email Address.'\n          >\n            {(placeholder) => (\n              <Input\n                type='email'\n                onChange={handleChange('email')}\n                placeholder={placeholder}\n                required\n              />\n            )}\n          </FormattedMessage>\n\n          <FormattedMessage\n            id='passwordPlaceholder'\n            defaultMessage='Password (min 6 characters)'\n            values={{ minCharacter: 6 }}\n          >\n            {(placeholder) => (\n              <Input\n                type='password'\n                placeholder={placeholder}\n                onChange={handleChange('password')}\n                required\n              />\n            )}\n          </FormattedMessage>\n\n          {errors}\n          <Button title={'Continue'} intlButtonId='continueBtn' />\n        </form>\n        <Divider>\n          <span>\n            <FormattedMessage id='orText' defaultMessage='or' />\n          </span>\n        </Divider>\n\n        <Button\n          title={'Continue with Google'}\n          icon={<Google />}\n          iconPosition='left'\n          iconStyle={{ color: '#ffffff', marginRight: 5 }}\n          intlButtonId='continueGoogleBtn'\n          style={{ color: '#fff' }}\n        />\n\n        <Offer style={{ padding: '20px 0' }}>\n          <FormattedMessage\n            id='dontHaveAccount'\n            defaultMessage=\"Don't have any account?\"\n          />{' '}\n          <LinkButton onClick={toggleSignUpForm}>\n            <FormattedMessage id='signUpBtnText' defaultMessage='Sign Up' />\n          </LinkButton>\n        </Offer>\n      </Container>\n\n      <OfferSection>\n        <Offer>\n          <FormattedMessage\n            id='forgotPasswordText'\n            defaultMessage='Forgot your password?'\n          />{' '}\n          <LinkButton>\n            <FormattedMessage id='resetText' defaultMessage='Reset It' />\n          </LinkButton>\n        </Offer>\n      </OfferSection>\n    </Wrapper>\n  );\n};\n\nexport default SigninForm;\n"]},"metadata":{},"sourceType":"module"}