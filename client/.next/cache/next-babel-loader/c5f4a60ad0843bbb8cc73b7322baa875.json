{"ast":null,"code":"var _jsxFileName = \"/home/viktorser/Desktop/DEV/Projects/Portfolio/instafood/client/containers/Layout/Header/LanguageSwitcher/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useLocale } from 'context/lang/language.provider';\nimport { Box, SelectedItem, Flag, MenuItem } from './LanguageSwitcher.style';\nimport { Popover, DEFlag, USFlag } from 'components';\nconst LANGUAGES = [{\n  id: 'en',\n  label: 'English',\n  intlLangName: 'intlEnglish',\n  icon: __jsx(USFlag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 68\n    }\n  })\n}, {\n  id: 'de',\n  label: 'German',\n  intlLangName: 'intlGerman',\n  icon: __jsx(DEFlag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 66\n    }\n  })\n}];\n\nconst LanguageMenu = ({\n  changeLanguage\n}) => {\n  return __jsx(React.Fragment, null, LANGUAGES.map(item => {\n    return __jsx(MenuItem, {\n      onClick: () => changeLanguage(item.id),\n      key: item.id,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, item.icon), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, item.label));\n  }));\n};\n\nconst LanguageSwitcher = () => {\n  const {\n    locale,\n    changeLanguage\n  } = useLocale();\n  const selectedLanguage = LANGUAGES.find(lang => lang.id === locale);\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(Popover, {\n    className: \"right\",\n    handler: __jsx(SelectedItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, __jsx(Flag, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.icon), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(FormattedMessage, {\n      id: selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.intlLangName,\n      defaultMessage: selectedLanguage === null || selectedLanguage === void 0 ? void 0 : selectedLanguage.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }))),\n    content: __jsx(LanguageMenu, {\n      changeLanguage: changeLanguage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport { LanguageSwitcher };","map":{"version":3,"sources":["/home/viktorser/Desktop/DEV/Projects/Portfolio/instafood/client/containers/Layout/Header/LanguageSwitcher/index.tsx"],"names":["React","FormattedMessage","useLocale","Box","SelectedItem","Flag","MenuItem","Popover","DEFlag","USFlag","LANGUAGES","id","label","intlLangName","icon","LanguageMenu","changeLanguage","map","item","LanguageSwitcher","locale","selectedLanguage","find","lang"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,GAAT,EAAcC,YAAd,EAA4BC,IAA5B,EAAkCC,QAAlC,QAAkD,0BAAlD;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,QAAwC,YAAxC;AAEA,MAAMC,SAAS,GAAG,CAChB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,KAAK,EAAE,SAAnB;AAA8BC,EAAAA,YAAY,EAAE,aAA5C;AAA2DC,EAAAA,IAAI,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjE,CADgB,EAEhB;AAAEH,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,KAAK,EAAE,QAAnB;AAA6BC,EAAAA,YAAY,EAAE,YAA3C;AAAyDC,EAAAA,IAAI,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/D,CAFgB,CAAlB;;AAKA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAC3C,SACE,4BACGN,SAAS,CAACO,GAAV,CAAeC,IAAD,IAAU;AACvB,WACE,MAAC,QAAD;AACE,MAAA,OAAO,EAAE,MAAMF,cAAc,CAACE,IAAI,CAACP,EAAN,CAD/B;AAEE,MAAA,GAAG,EAAEO,IAAI,CAACP,EAFZ;AAGE,MAAA,KAAK,EAAEO,IAAI,CAACP,EAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOO,IAAI,CAACJ,IAAZ,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOI,IAAI,CAACN,KAAZ,CANF,CADF;AAUD,GAXA,CADH,CADF;AAgBD,CAjBD;;AAmBA,MAAMO,gBAA0B,GAAG,MAAM;AACvC,QAAM;AAAEC,IAAAA,MAAF;AAAUJ,IAAAA;AAAV,MAA6Bd,SAAS,EAA5C;AACA,QAAMmB,gBAAgB,GAAGX,SAAS,CAACY,IAAV,CAAgBC,IAAD,IAAUA,IAAI,CAACZ,EAAL,KAAYS,MAArC,CAAzB;AAEA,SACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,OAAO,EACL,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,gBAAP,aAAOA,gBAAP,uBAAOA,gBAAgB,CAAEP,IAAzB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AACE,MAAA,EAAE,EAAEO,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAER,YADxB;AAEE,MAAA,cAAc,EAAEQ,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAET,KAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CAHJ;AAaE,IAAA,OAAO,EAAE,MAAC,YAAD;AAAc,MAAA,cAAc,EAAEI,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAmBD,CAvBD;;AAyBA,SAASG,gBAAT","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { useLocale } from 'context/lang/language.provider';\nimport { Box, SelectedItem, Flag, MenuItem } from './LanguageSwitcher.style';\nimport { Popover, DEFlag, USFlag } from 'components';\n\nconst LANGUAGES = [\n  { id: 'en', label: 'English', intlLangName: 'intlEnglish', icon: <USFlag /> },\n  { id: 'de', label: 'German', intlLangName: 'intlGerman', icon: <DEFlag /> },\n];\n\nconst LanguageMenu = ({ changeLanguage }) => {\n  return (\n    <>\n      {LANGUAGES.map((item) => {\n        return (\n          <MenuItem\n            onClick={() => changeLanguage(item.id)}\n            key={item.id}\n            value={item.id}\n          >\n            <span>{item.icon}</span>\n            <span>{item.label}</span>\n          </MenuItem>\n        );\n      })}\n    </>\n  );\n};\n\nconst LanguageSwitcher: React.FC = () => {\n  const { locale, changeLanguage } = useLocale();\n  const selectedLanguage = LANGUAGES.find((lang) => lang.id === locale);\n\n  return (\n    <Box>\n      <Popover\n        className='right'\n        handler={\n          <SelectedItem>\n            <Flag>{selectedLanguage?.icon}</Flag>\n            <span>\n              <FormattedMessage\n                id={selectedLanguage?.intlLangName}\n                defaultMessage={selectedLanguage?.label}\n              />\n            </span>\n          </SelectedItem>\n        }\n        content={<LanguageMenu changeLanguage={changeLanguage} />}\n      />\n    </Box>\n  );\n};\n\nexport { LanguageSwitcher };\n"]},"metadata":{},"sourceType":"module"}