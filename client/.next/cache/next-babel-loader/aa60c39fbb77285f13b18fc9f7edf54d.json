{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/viktorser/Desktop/DEV/Projects/Portfolio/instafood/client/components/AuthForm/Signup.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport { FormattedMessage } from 'react-intl';\nimport useRequest from 'hooks/useRequest';\nimport { AuthContext } from 'context/auth/auth.context';\nimport { Button } from 'components';\nimport { Wrapper, Container, Heading, SubHeading, HelperText, Offer, Input, Divider, LinkButton } from './AuthForm.style';\n\nvar SignupForm = function SignupForm() {\n  _s();\n\n  var _useContext = useContext(AuthContext),\n      authDispatch = _useContext.authDispatch;\n\n  var _useState = useState({\n    email: '',\n    password: ''\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var email = values.email,\n      password = values.password;\n\n  var _useRequest = useRequest({\n    url: '/api/users/signup',\n    method: 'post',\n    body: {\n      email: email,\n      password: password\n    },\n    onSuccess: function onSuccess() {\n      return Router.push('/');\n    }\n  }),\n      doRequest = _useRequest.doRequest,\n      errors = _useRequest.errors;\n\n  var toggleSignInForm = function toggleSignInForm() {\n    authDispatch({\n      type: 'SIGNIN'\n    });\n  };\n\n  var handleChange = function handleChange(name) {\n    return function (e) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, name, e.target.value)));\n    };\n  };\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return doRequest();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"signUpBtnText\",\n    defaultMessage: \"Sign Up\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), __jsx(SubHeading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"signUpText\",\n    defaultMessage: \"Every fill is required in sign up\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), __jsx(FormattedMessage, {\n    id: \"emailAddressPlaceholder\",\n    defaultMessage: \"Email Address or Contact No.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, function (placeholder) {\n    return __jsx(Input, {\n      type: \"text\",\n      placeholder: placeholder,\n      onChange: handleChange('email'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    });\n  }), __jsx(FormattedMessage, {\n    id: \"passwordPlaceholder\",\n    defaultMessage: \"Password (min 6 characters)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, function (placeholder) {\n    return __jsx(Input, {\n      type: \"password\",\n      placeholder: placeholder,\n      onChange: handleChange('password'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    });\n  }), __jsx(HelperText, {\n    style: {\n      padding: '20px 0 30px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"signUpText\",\n    defaultMessage: \"By signing up, you agree to Pickbazar's\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), ' ', __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"termsConditionText\",\n    defaultMessage: \"Terms & Condtion\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })))), errors, __jsx(Button, {\n    title: 'Continue',\n    intlButtonId: \"continueBtn\",\n    onClick: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"orText\",\n    defaultMessage: \"or\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }))), __jsx(Button, {\n    title: 'Continue with Google',\n    intlButtonId: \"continueGoogleBtn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), __jsx(Offer, {\n    style: {\n      padding: '20px 0'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"alreadyHaveAccount\",\n    defaultMessage: \"Already have an account?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }), ' ', __jsx(LinkButton, {\n    onClick: toggleSignInForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"loginBtnText\",\n    defaultMessage: \"Login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(SignupForm, \"q73fx5/HZJ/aMfaUs3ANN6rbDSU=\", false, function () {\n  return [useRequest];\n});\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/home/viktorser/Desktop/DEV/Projects/Portfolio/instafood/client/components/AuthForm/Signup.tsx"],"names":["React","useState","useContext","Router","Link","FormattedMessage","useRequest","AuthContext","Button","Wrapper","Container","Heading","SubHeading","HelperText","Offer","Input","Divider","LinkButton","SignupForm","authDispatch","email","password","values","setValues","url","method","body","onSuccess","push","doRequest","errors","toggleSignInForm","type","handleChange","name","e","target","value","onSubmit","preventDefault","placeholder","padding"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport { FormattedMessage } from 'react-intl';\n\nimport useRequest from 'hooks/useRequest';\nimport { AuthContext } from 'context/auth/auth.context';\nimport { Button } from 'components';\nimport {\n  Wrapper,\n  Container,\n  Heading,\n  SubHeading,\n  HelperText,\n  Offer,\n  Input,\n  Divider,\n  LinkButton,\n} from './AuthForm.style';\n\nconst SignupForm = () => {\n  const { authDispatch } = useContext<any>(AuthContext);\n  const [values, setValues] = useState({\n    email: '',\n    password: '',\n  });\n  const { email, password } = values;\n  const { doRequest, errors } = useRequest({\n    url: '/api/users/signup',\n    method: 'post',\n    body: {\n      email,\n      password,\n    },\n    onSuccess: () => Router.push('/'),\n  });\n\n  const toggleSignInForm = () => {\n    authDispatch({\n      type: 'SIGNIN',\n    });\n  };\n\n  const handleChange = (name) => (e) => {\n    setValues({ ...values, [name]: e.target.value });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    await doRequest();\n  };\n\n  return (\n    <Wrapper>\n      <Container>\n        <Heading>\n          <FormattedMessage id='signUpBtnText' defaultMessage='Sign Up' />\n        </Heading>\n\n        <SubHeading>\n          <FormattedMessage\n            id='signUpText'\n            defaultMessage='Every fill is required in sign up'\n          />\n        </SubHeading>\n\n        <FormattedMessage\n          id='emailAddressPlaceholder'\n          defaultMessage='Email Address or Contact No.'\n        >\n          {(placeholder) => (\n            <Input\n              type='text'\n              placeholder={placeholder}\n              onChange={handleChange('email')}\n            />\n          )}\n        </FormattedMessage>\n\n        <FormattedMessage\n          id='passwordPlaceholder'\n          defaultMessage='Password (min 6 characters)'\n        >\n          {(placeholder) => (\n            <Input\n              type='password'\n              placeholder={placeholder}\n              onChange={handleChange('password')}\n            />\n          )}\n        </FormattedMessage>\n\n        <HelperText style={{ padding: '20px 0 30px' }}>\n          <FormattedMessage\n            id='signUpText'\n            defaultMessage=\"By signing up, you agree to Pickbazar's\"\n          />{' '}\n          <Link href='/'>\n            <a>\n              <FormattedMessage\n                id='termsConditionText'\n                defaultMessage='Terms &amp; Condtion'\n              />\n            </a>\n          </Link>\n        </HelperText>\n\n        {errors}\n\n        <Button\n          title={'Continue'}\n          intlButtonId='continueBtn'\n          onClick={onSubmit}\n        />\n\n        <Divider>\n          <span>\n            <FormattedMessage id='orText' defaultMessage='or' />\n          </span>\n        </Divider>\n\n        <Button\n          title={'Continue with Google'}\n          intlButtonId='continueGoogleBtn'\n        />\n        <Offer style={{ padding: '20px 0' }}>\n          <FormattedMessage\n            id='alreadyHaveAccount'\n            defaultMessage='Already have an account?'\n          />{' '}\n          <LinkButton onClick={toggleSignInForm}>\n            <FormattedMessage id='loginBtnText' defaultMessage='Login' />\n          </LinkButton>\n        </Offer>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}